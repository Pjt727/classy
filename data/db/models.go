// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type SeasonEnum string

const (
	SeasonEnumSpring SeasonEnum = "Spring"
	SeasonEnumFall   SeasonEnum = "Fall"
	SeasonEnumWinter SeasonEnum = "Winter"
	SeasonEnumSummer SeasonEnum = "Summer"
)

func (e *SeasonEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = SeasonEnum(s)
	case string:
		*e = SeasonEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for SeasonEnum: %T", src)
	}
	return nil
}

type NullSeasonEnum struct {
	SeasonEnum SeasonEnum
	Valid      bool // Valid is true if SeasonEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullSeasonEnum) Scan(value interface{}) error {
	if value == nil {
		ns.SeasonEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.SeasonEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullSeasonEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.SeasonEnum), nil
}

type Course struct {
	ID                 string
	SchoolID           string
	SubjectCode        pgtype.Text
	Number             pgtype.Text
	SubjectDescription pgtype.Text
	Title              pgtype.Text
	Description        pgtype.Text
	CreditHours        int32
}

type FacultyMember struct {
	ID           string
	SchoolID     string
	Name         string
	EmailAddress pgtype.Text
	FirstName    pgtype.Text
	LastName     pgtype.Text
}

type MeetingTime struct {
	ID           int32
	SectionID    string
	TermSeason   SeasonEnum
	TermYear     int32
	CourseID     string
	SchoolID     string
	StartDate    pgtype.Timestamp
	EndDate      pgtype.Timestamp
	MeetingType  pgtype.Text
	StartMinutes pgtype.Time
	EndMinutes   pgtype.Time
	IsMonday     bool
	IsTuesday    bool
	IsWednesday  bool
	IsThursday   bool
	IsFriday     bool
	IsSaturday   bool
	IsSunday     bool
}

type School struct {
	ID   string
	Name pgtype.Text
}

type Section struct {
	ID                string
	TermSeason        SeasonEnum
	TermYear          int32
	CourseID          string
	SchoolID          string
	MaxEnrollment     pgtype.Int4
	InstructionMethod pgtype.Text
	Campus            pgtype.Text
	Enrollment        pgtype.Int4
	PrimaryFacultyID  pgtype.Text
}

type StagingMeetingTime struct {
	ID           pgtype.Int4
	SectionID    pgtype.Text
	TermSeason   NullSeasonEnum
	TermYear     pgtype.Int4
	CourseID     pgtype.Text
	SchoolID     pgtype.Text
	StartDate    pgtype.Timestamp
	EndDate      pgtype.Timestamp
	MeetingType  pgtype.Text
	StartMinutes pgtype.Time
	EndMinutes   pgtype.Time
	IsMonday     bool
	IsTuesday    bool
	IsWednesday  bool
	IsThursday   bool
	IsFriday     bool
	IsSaturday   bool
	IsSunday     bool
}

type StagingSection struct {
	ID                pgtype.Text
	TermSeason        NullSeasonEnum
	TermYear          pgtype.Int4
	CourseID          pgtype.Text
	SchoolID          pgtype.Text
	MaxEnrollment     pgtype.Int4
	InstructionMethod pgtype.Text
	Campus            pgtype.Text
	Enrollment        pgtype.Int4
	PrimaryFacultyID  pgtype.Text
}

type Term struct {
	Year   int32
	Season SeasonEnum
}
